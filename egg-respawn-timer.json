{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v2",
        "update_url": null
    },
    "exported_at": "2025-08-26T19:16:52+00:00",
    "name": "Respawn Timer",
    "author": "iamtempusthales@gmail.com",
    "uuid": "2e0194c9-df5a-4fe4-b8b8-22a9d0d19100",
    "description": "A bot that manages boss respawn timers in dedicated threads, featuring interactive dashboards, dropdowns, and modals, allowing multiple users to track independent timers and boss lists concurrently.",
    "tags": [
        "bot",
        "python"
    ],
    "features": [],
    "docker_images": {
        "Python 3.13": "ghcr.io/goover/python:3.13",
        "Python 3.12": "ghcr.io/goover/python:3.12"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ \"{{AUTO_UPDATE}}\" == \"1\" ]]; then git pull; fi; if [[ ! -z \"{{PY_PACKAGES}}\" ]]; then pip install -U --prefix .local {{PY_PACKAGES}}; fi; if [[ -f /home/container/${REQUIREMENTS_FILE} ]]; then pip install -U --prefix .local -r ${REQUIREMENTS_FILE}; fi; /usr/local/bin/python /home/container/{{PY_FILE}}",
    "config": {
        "files": "{}",
        "startup": "{\n    \"done\": \"Bot Setup Done\"\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\r\n# THIS EGG IS LICENSED UNDER AGPLv3\r\n\r\nset -euo pipefail\r\n\r\n# --- Non-interactive for apt ---\r\nexport DEBIAN_FRONTEND=noninteractive\r\n\r\n# --- Define Game Name ---\r\nGAMENAME=\"Python Server\"\r\n\r\n# --- Colors ---\r\nRED=$(tput setaf 1)\r\nGREEN=$(tput setaf 2)\r\nYELLOW=$(tput setaf 3)\r\nBLUE=$(tput setaf 4)\r\nNC=$(tput sgr0)\r\n\r\n# --- Line separator ---\r\nLINE=\"${BLUE}----------------------------------------------------------------${NC}\"\r\n\r\n# --- Logging functions ---\r\nlog_info()    { echo \"${BLUE}[INFO]${NC} $*\"; }\r\nlog_warn()    { echo \"${YELLOW}[WARN]${NC} $*\"; }\r\nlog_error()   { echo \"${RED}[ERROR]${NC} $*\" >&2; }\r\nlog_success() { echo \"${GREEN}[ OK ]${NC} $*\"; }\r\n\r\n# --- Helper for running commands safely ---\r\nrun_or_fail() {\r\n    local desc=\"$1\"; shift\r\n    if \"$@\"; then\r\n        log_success \"$desc\"\r\n    else\r\n        log_error \"$desc failed!\"\r\n        exit 1\r\n    fi\r\n}\r\n\r\n# --- Header ---\r\nprint_header() {\r\n    clear\r\n    echo \"$LINE\"\r\n    echo \"${YELLOW}${GAMENAME} Installation Script${NC}\"\r\n    echo \"${YELLOW}Egg by Tempus Thales -=MH=- and gOOvER (https://discord.tempusthales.dev) | License: AGPLv3${NC}\"\r\n    echo \"$LINE\"\r\n}\r\n\r\n# --- Start Installation ---\r\nprint_header\r\n\r\n#log_info \"Updating system packages...\"\r\n#run_or_fail \"apt update\" apt update\r\n#run_or_fail \"Installing required packages\" apt install -y git curl jq file unzip make gcc g++ libtool python3-pip\r\n\r\nmkdir -p /mnt/server\r\ncd /mnt/server\r\n\r\nif [[ \"${USER_UPLOAD:-}\" == \"true\" || \"${USER_UPLOAD:-}\" == \"1\" ]]; then\r\n    log_warn \"User upload flag detected, assuming files are already prepared. Exiting.\"\r\n    exit 0\r\nfi\r\n\r\n# --- Handle Git URL ---\r\nGIT_ADDRESS=\"${GIT_ADDRESS:-}\"\r\n\r\nif [[ -z \"$GIT_ADDRESS\" ]]; then\r\n    log_error \"GIT_ADDRESS is not set!\"\r\n    exit 1\r\nfi\r\n\r\n# Add .git if missing\r\n[[ $GIT_ADDRESS != *.git ]] && GIT_ADDRESS=\"${GIT_ADDRESS}.git\"\r\n\r\n# Add auth if provided\r\nif [[ -n \"${USERNAME:-}\" && -n \"${ACCESS_TOKEN:-}\" ]]; then\r\n    GIT_ADDRESS_ESCAPED=$(echo \"$GIT_ADDRESS\" | sed 's#https://##')\r\n    GIT_ADDRESS=\"https://${USERNAME}:${ACCESS_TOKEN}@${GIT_ADDRESS_ESCAPED}\"\r\n    log_info \"Using authenticated Git URL\"\r\nelse\r\n    log_info \"Using anonymous Git URL\"\r\nfi\r\n\r\n# --- Clone or Pull Repo ---\r\nif [ -d .git ]; then\r\n    log_info \"Existing Git repo detected\"\r\n\r\n    # --- Make repo safe for Git ---\r\n    run_or_fail \"Mark /mnt/server as safe Git directory\" git config --global --add safe.directory /mnt/server\r\n\r\n    log_info \"Pulling latest changes...\"\r\n    run_or_fail \"Git pull\" git pull\r\nelse\r\n    if [ -n \"${BRANCH:-}\" ]; then\r\n        log_info \"Cloning branch ${BRANCH}...\"\r\n        run_or_fail \"Git clone\" git clone --single-branch --branch \"$BRANCH\" \"$GIT_ADDRESS\" .\r\n    else\r\n        log_info \"Cloning default branch...\"\r\n        run_or_fail \"Git clone\" git clone \"$GIT_ADDRESS\" .\r\n    fi\r\nfi\r\n\r\nexport HOME=/mnt/server\r\ncd $HOME\r\n\r\n# --- Python packages ---\r\nlog_info \"Installing Python packages...\"\r\nif [ -n \"${PY_PACKAGES:-}\" ]; then\r\n    run_or_fail \"Installing ${PY_PACKAGES}\" pip install -U --prefix .local ${PY_PACKAGES}\r\nfi\r\n\r\nif [ -f $HOME/requirements.txt ]; then\r\n    log_info \"Installing requirements.txt packages...\"\r\n    run_or_fail \"Install requirements.txt\" python3 -m pip install -U --prefix .local -r ${REQUIREMENTS_FILE}\r\nfi\r\n\r\n# --- Make local Python packages available ---\r\nexport PATH=\"$HOME/.local/bin:$PATH\"\r\nexport PYTHONPATH=\"$HOME/.local/lib/python$(python3 -c 'import sys; print(f\"{sys.version_info.major}.{sys.version_info.minor}\")')/site-packages:${PYTHONPATH:-}\"\r\n\r\nlog_info \"Python packages installed and available in PATH and PYTHONPATH\"\r\n\r\necho \"$LINE\"\r\nlog_success \"Installation complete!\"\r\necho \"$LINE\"\r\n",
            "container": "ghcr.io/goover/installers:python",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "sort": 3,
            "name": "Auto Update",
            "description": "Pull the latest files on startup when using a GitHub repo.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ]
        },
        {
            "sort": 2,
            "name": "Git Branch",
            "description": "What branch to pull from github.\r\n\r\nDefault is blank to pull the repo default branch",
            "env_variable": "BRANCH",
            "default_value": "main",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ]
        },
        {
            "sort": 7,
            "name": "discord_token",
            "description": "Enter assign bot token from discord developer portal",
            "env_variable": "DISCORD_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ]
        },
        {
            "sort": 1,
            "name": "Git Repo Address",
            "description": "Git repo to clone\r\n\r\nI.E. https://github.com/username/repo_name",
            "env_variable": "GIT_ADDRESS",
            "default_value": "https://github.com/tempusthales/respawn_timer",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ]
        },
        {
            "sort": 4,
            "name": "App py file",
            "description": "The file that starts the App.",
            "env_variable": "PY_FILE",
            "default_value": "boss_timer.py",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ]
        },
        {
            "sort": 5,
            "name": "Additional Python packages",
            "description": "Install additional python packages.\r\n\r\nUse spaces to separate",
            "env_variable": "PY_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ]
        },
        {
            "sort": 6,
            "name": "Requirements file",
            "description": "if there are other requirements files to choose from.",
            "env_variable": "REQUIREMENTS_FILE",
            "default_value": "requirements.txt",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ]
        }
    ]
}
